#include <stdio.h>
#include <math.h>
int x[10000], y[10000], s[10000];	
void quickSort(int l, int r, int *data) 
{
    if(l >= r) return;
    int m = data[(l + r) / 2];
    int i = l;
    int j = r;
    while(i <= j)
	{
        while(data[i] < m)
            i++;
        while(data[j] > m)
            j--;
        if(i <= j)
		{
            int tmp = data[i];
            data[i] = data[j];
            data[j] = tmp;
            i++;
            j--;
        }
    }
    if(l < j)
        quickSort(l, j, data);
    if(r > i)
        quickSort(i, r, data);
}
int main()
{
	int n, X, Y;
	int res = 0;
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
	{
		scanf("%d", &x[i]);
		scanf("%d", &y[i]);
	}		
	quickSort(0, n - 1, y);	
	if(n % 2)
		Y = y[(n - 1) / 2];
	else Y = (y[n / 2] + y[n / 2 - 1]) / 2;
	
    for(int i = 0; i < n; i++)
    {
        res += abs(y[i] - Y);
    }
    quickSort(0, n - 1, x);
    
	for (int i = 0; i < n; i++)
	{
		s[i] = x[i] - i;
	}	
	quickSort(0, n - 1, s);	
	if(n % 2)
		X = s[(n - 1) / 2];
	else X = (s[n / 2] + s[n / 2 - 1]) / 2;	
    for(int i = 0; i < n; i++)
    {
        res += abs(s[i] - X);
    }	
    printf("%d", res);
    return 0;
}